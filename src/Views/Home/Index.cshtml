@{
    ViewData["Title"] = "Home Page";
}
<div class="text-center">
    <form enctype="multipart/form-data" method="post">
        <dl>
            <dt>
                <label>Upload de arquivos</label>
            </dt>
            <dd>
                <input type="file" id="files" multiple>
            </dd>
        </dl>
        <input type="button" id="btnEnviar" value="Enviar" />
    </form>
    <hr />

    <div class="container">
        <div class="col-md-6 pull-center">
            <div class="input-group">
                <Label>Busca por Data: </Label>
                <input type="text" id="min-date" class="form-control date-range-filter" placeholder="Data de Início:">
                <input type="text" id="max-date" class="form-control date-range-filter" placeholder="Data Final:">
            </div>
        </div>
    </div>

    <hr />

    <table id="gridTransaction" class="table table-hover">
        <thead>
            <tr>
                <th>Id</th>
                <th>Valor</th>
                <th>Data</th>
                <th>Descrição</th>
                <th>Operação</th>
                <th>Observação</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>

    <div class="modal" id="editModal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Transações Bancárias</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div id="container">
                    <input type=hidden id=transactionId>

                    <div class="form-group">
                        Operação:<input type="text" id="lblOperacao" readonly>
                    </div>

                    <div class="form-group">
                        Data: <input type="text" id="lblData" readonly>
                    </div>

                    <div class="form-group">
                        Valor: <input type="text" id="lblValor" readonly>
                    </div>

                    <div class="form-group">
                        Descrição:<input type="text" id="lblDescricao" readonly>
                    </div>

                    <div class="form-group">
                        <textarea id="txtObs" cols="40" rows="5"></textarea>
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" id="btnSave" class="btn btn-primary">Save changes</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
</div>
@section scripts{
<script src="//cdn.datatables.net/1.10.9/js/jquery.dataTables.min.js"></script>
<link href="//cdn.datatables.net/1.10.9/css/jquery.dataTables.min.css" rel="stylesheet" />
<script src="//cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
<script type="text/javascript">

    function fillDataTable(data) {
        var oTable = $("#gridTransaction").DataTable({
            "language": {
                "lengthMenu": "Exibe _MENU_ Registros por página",
                "search": "Procurar",
                "paginate": { "previous": "Retornar", "next": "Avançar" },
                "zeroRecords": "Nada foi encontrado",
                "info": "Exibindo página _PAGE_ de _PAGES_",
                "infoEmpty": "Sem registros",
                "infoFiltered": "(filtrado de _MAX_ regitros totais)"
            },
            "processing": true,
            "filter": true,
            "lengthMenu": [[3, 5, 10, 25, 50, -1], [3, 5, 10, 25, 50, "Todos"]],
            "pageLength": 5,
            data: data,
            "columns": [
                { "data": "id", "title": "Id", "autowidth": true },
                { "data": "operation", "title": "Operação", "autowidth": true },
                { "data": "amount", "title": "Valor", "autowidth": true },
                { "data": "data", "title": "Data", "autowidth": true },
                { "data": "description", "title": "Descrição", "autowidth": true },
                { "data": "note", "title": "Observação", "autowidth": true },
            ],
            "aoColumnDefs": [
                {
                    "mRender": function (data, type, row) {
                        if (data === null) return 'N/A';
                        if (data === '') return 'N/A';
                        if (data == '0000-00-00 00:00:00') return 'N/A';
                        return data.substr(8, 2) + '/' + data.substr(5, 2) + '/' + data.substr(0, 4);
                    },
                    "aTargets": [3]
                },
                { "bVisible": true, "aTargets": [3] }
            ]
        });

        return oTable;
    }

    $(document).ready(function () {
        var oTable;

        $("#btnSave").click(function () {
            var id = $("#transactionId").val();
            var obs = $("#txtObs").val();
            $.ajax({
                type: "POST",
                url: "/Home/UpdateTransaction/",
                data: { id: id, obs: obs },
                success: function (data) {
                    $("#txtObs").val('');
                    $("#gridTransaction").dataTable().fnDestroy();
                    oTable = fillDataTable(data);
                    $('#editModal').modal('hide');
                },
                error: function (data) {
                }
            });
        });

        $('.date-range-filter').change(function () {
            oTable.draw();
        });

        $('#gridTransaction').on('click', 'tr', function () {
            $('#transactionId').val($('td', this).eq(0).text());
            $('#lblOperacao').val($('td', this).eq(1).text());
            $('#lblData').val($('td', this).eq(3).text());
            $('#lblValor').val($('td', this).eq(2).text());
            $('#lblDescricao').val($('td', this).eq(4).text());
            $('#txtObs').val($('td', this).eq(5).text());
            $('#editModal').modal("show");
        });

        $("#btnEnviar").click(function () {
            var formData = new FormData();
            var files = $("#files")[0].files;
            for (var key in files) {
                formData.append("files", files[key]);
            }
            $.ajax({
                type: "POST",
                url: "/Home/Upload",
                processData: false,
                contentType: false,
                data: formData,
                success: function (data) {
                    oTable = fillDataTable(data);
                },
                error: function (data) {
                }
            });
        });

        $.fn.dataTable.ext.search.push(
            function (settings, data, dataIndex) {
                var min = $('#min-date').val();
                var max = $('#max-date').val();
                var createdAt = data[3];
                if (
                    (min == "" || max == "") ||
                    (moment(createdAt).isSameOrAfter(min) && moment(createdAt).isSameOrBefore(max))
                ) {
                    return true;
                }
                return false;
            }
        );
    });
</script>
}
